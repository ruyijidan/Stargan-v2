odict_keys(['from_rgb.weight', 'from_rgb.bias', 'encode.0.conv1.weight', 'encode.0.conv1.bias', 'encode.0.conv2.weight', 'encode.0.conv2.bias', 'encode.0.norm1.weight', 'encode.0.norm1.bias', 'encode.0.norm2.weight', 'encode.0.norm2.bias', 'encode.0.conv1x1.weight', 'encode.1.conv1.weight', 'encode.1.conv1.bias', 'encode.1.conv2.weight', 'encode.1.conv2.bias', 'encode.1.norm1.weight', 'encode.1.norm1.bias', 'encode.1.norm2.weight', 'encode.1.norm2.bias', 'encode.1.conv1x1.weight', 'encode.2.conv1.weight', 'encode.2.conv1.bias', 'encode.2.conv2.weight', 'encode.2.conv2.bias', 'encode.2.norm1.weight', 'encode.2.norm1.bias', 'encode.2.norm2.weight', 'encode.2.norm2.bias', 'encode.2.conv1x1.weight', 'encode.3.conv1.weight', 'encode.3.conv1.bias', 'encode.3.conv2.weight', 'encode.3.conv2.bias', 'encode.3.norm1.weight', 'encode.3.norm1.bias', 'encode.3.norm2.weight', 'encode.3.norm2.bias', 'encode.4.conv1.weight', 'encode.4.conv1.bias', 'encode.4.conv2.weight', 'encode.4.conv2.bias', 'encode.4.norm1.weight', 'encode.4.norm1.bias', 'encode.4.norm2.weight', 'encode.4.norm2.bias', 'encode.5.conv1.weight', 'encode.5.conv1.bias', 'encode.5.conv2.weight', 'encode.5.conv2.bias', 'encode.5.norm1.weight', 'encode.5.norm1.bias', 'encode.5.norm2.weight', 'encode.5.norm2.bias', 'decode.0.conv1.weight', 'decode.0.conv1.bias', 'decode.0.conv2.weight', 'decode.0.conv2.bias', 'decode.0.norm1.fc.weight', 'decode.0.norm1.fc.bias', 'decode.0.norm2.fc.weight', 'decode.0.norm2.fc.bias', 'decode.1.conv1.weight', 'decode.1.conv1.bias', 'decode.1.conv2.weight', 'decode.1.conv2.bias', 'decode.1.norm1.fc.weight', 'decode.1.norm1.fc.bias', 'decode.1.norm2.fc.weight', 'decode.1.norm2.fc.bias', 'decode.2.conv1.weight', 'decode.2.conv1.bias', 'decode.2.conv2.weight', 'decode.2.conv2.bias', 'decode.2.norm1.fc.weight', 'decode.2.norm1.fc.bias', 'decode.2.norm2.fc.weight', 'decode.2.norm2.fc.bias', 'decode.3.conv1.weight', 'decode.3.conv1.bias', 'decode.3.conv2.weight', 'decode.3.conv2.bias', 'decode.3.norm1.fc.weight', 'decode.3.norm1.fc.bias', 'decode.3.norm2.fc.weight', 'decode.3.norm2.fc.bias', 'decode.3.conv1x1.weight', 'decode.4.conv1.weight', 'decode.4.conv1.bias', 'decode.4.conv2.weight', 'decode.4.conv2.bias', 'decode.4.norm1.fc.weight', 'decode.4.norm1.fc.bias', 'decode.4.norm2.fc.weight', 'decode.4.norm2.fc.bias', 'decode.4.conv1x1.weight', 'decode.5.conv1.weight', 'decode.5.conv1.bias', 'decode.5.conv2.weight', 'decode.5.conv2.bias', 'decode.5.norm1.fc.weight', 'decode.5.norm1.fc.bias', 'decode.5.norm2.fc.weight', 'decode.5.norm2.fc.bias', 'decode.5.conv1x1.weight', 'to_rgb.0.weight', 'to_rgb.0.bias', 'to_rgb.2.weight', 'to_rgb.2.bias'])





from_rgb.weight : torch.Size([64, 3, 3, 3])
from_rgb.bias : torch.Size([64])
encode.0.conv1.weight : torch.Size([64, 64, 3, 3])
encode.0.conv1.bias : torch.Size([64])
encode.0.conv2.weight : torch.Size([128, 64, 3, 3])
encode.0.conv2.bias : torch.Size([128])
encode.0.norm1.weight : torch.Size([64])
encode.0.norm1.bias : torch.Size([64])
encode.0.norm2.weight : torch.Size([64])
encode.0.norm2.bias : torch.Size([64])
encode.0.conv1x1.weight : torch.Size([128, 64, 1, 1])
encode.1.conv1.weight : torch.Size([128, 128, 3, 3])
encode.1.conv1.bias : torch.Size([128])
encode.1.conv2.weight : torch.Size([256, 128, 3, 3])
encode.1.conv2.bias : torch.Size([256])
encode.1.norm1.weight : torch.Size([128])
encode.1.norm1.bias : torch.Size([128])
encode.1.norm2.weight : torch.Size([128])
encode.1.norm2.bias : torch.Size([128])
encode.1.conv1x1.weight : torch.Size([256, 128, 1, 1])
encode.2.conv1.weight : torch.Size([256, 256, 3, 3])
encode.2.conv1.bias : torch.Size([256])
encode.2.conv2.weight : torch.Size([512, 256, 3, 3])
encode.2.conv2.bias : torch.Size([512])
encode.2.norm1.weight : torch.Size([256])
encode.2.norm1.bias : torch.Size([256])
encode.2.norm2.weight : torch.Size([256])
encode.2.norm2.bias : torch.Size([256])
encode.2.conv1x1.weight : torch.Size([512, 256, 1, 1])
encode.3.conv1.weight : torch.Size([512, 512, 3, 3])
encode.3.conv1.bias : torch.Size([512])
encode.3.conv2.weight : torch.Size([512, 512, 3, 3])
encode.3.conv2.bias : torch.Size([512])
encode.3.norm1.weight : torch.Size([512])
encode.3.norm1.bias : torch.Size([512])
encode.3.norm2.weight : torch.Size([512])
encode.3.norm2.bias : torch.Size([512])
encode.4.conv1.weight : torch.Size([512, 512, 3, 3])
encode.4.conv1.bias : torch.Size([512])
encode.4.conv2.weight : torch.Size([512, 512, 3, 3])
encode.4.conv2.bias : torch.Size([512])
encode.4.norm1.weight : torch.Size([512])
encode.4.norm1.bias : torch.Size([512])
encode.4.norm2.weight : torch.Size([512])
encode.4.norm2.bias : torch.Size([512])
encode.5.conv1.weight : torch.Size([512, 512, 3, 3])
encode.5.conv1.bias : torch.Size([512])
encode.5.conv2.weight : torch.Size([512, 512, 3, 3])
encode.5.conv2.bias : torch.Size([512])
encode.5.norm1.weight : torch.Size([512])
encode.5.norm1.bias : torch.Size([512])
encode.5.norm2.weight : torch.Size([512])
encode.5.norm2.bias : torch.Size([512])
decode.0.conv1.weight : torch.Size([512, 512, 3, 3])
decode.0.conv1.bias : torch.Size([512])
decode.0.conv2.weight : torch.Size([512, 512, 3, 3])
decode.0.conv2.bias : torch.Size([512])
decode.0.norm1.fc.weight : torch.Size([1024, 64])
decode.0.norm1.fc.bias : torch.Size([1024])
decode.0.norm2.fc.weight : torch.Size([1024, 64])
decode.0.norm2.fc.bias : torch.Size([1024])
decode.1.conv1.weight : torch.Size([512, 512, 3, 3])
decode.1.conv1.bias : torch.Size([512])
decode.1.conv2.weight : torch.Size([512, 512, 3, 3])
decode.1.conv2.bias : torch.Size([512])
decode.1.norm1.fc.weight : torch.Size([1024, 64])
decode.1.norm1.fc.bias : torch.Size([1024])
decode.1.norm2.fc.weight : torch.Size([1024, 64])
decode.1.norm2.fc.bias : torch.Size([1024])
decode.2.conv1.weight : torch.Size([512, 512, 3, 3])
decode.2.conv1.bias : torch.Size([512])
decode.2.conv2.weight : torch.Size([512, 512, 3, 3])
decode.2.conv2.bias : torch.Size([512])
decode.2.norm1.fc.weight : torch.Size([1024, 64])
decode.2.norm1.fc.bias : torch.Size([1024])
decode.2.norm2.fc.weight : torch.Size([1024, 64])
decode.2.norm2.fc.bias : torch.Size([1024])
decode.3.conv1.weight : torch.Size([256, 512, 3, 3])
decode.3.conv1.bias : torch.Size([256])
decode.3.conv2.weight : torch.Size([256, 256, 3, 3])
decode.3.conv2.bias : torch.Size([256])
decode.3.norm1.fc.weight : torch.Size([1024, 64])
decode.3.norm1.fc.bias : torch.Size([1024])
decode.3.norm2.fc.weight : torch.Size([512, 64])
decode.3.norm2.fc.bias : torch.Size([512])
decode.3.conv1x1.weight : torch.Size([256, 512, 1, 1])
decode.4.conv1.weight : torch.Size([128, 256, 3, 3])
decode.4.conv1.bias : torch.Size([128])
decode.4.conv2.weight : torch.Size([128, 128, 3, 3])
decode.4.conv2.bias : torch.Size([128])
decode.4.norm1.fc.weight : torch.Size([512, 64])
decode.4.norm1.fc.bias : torch.Size([512])
decode.4.norm2.fc.weight : torch.Size([256, 64])
decode.4.norm2.fc.bias : torch.Size([256])
decode.4.conv1x1.weight : torch.Size([128, 256, 1, 1])
decode.5.conv1.weight : torch.Size([64, 128, 3, 3])
decode.5.conv1.bias : torch.Size([64])
decode.5.conv2.weight : torch.Size([64, 64, 3, 3])
decode.5.conv2.bias : torch.Size([64])
decode.5.norm1.fc.weight : torch.Size([256, 64])
decode.5.norm1.fc.bias : torch.Size([256])
decode.5.norm2.fc.weight : torch.Size([128, 64])
decode.5.norm2.fc.bias : torch.Size([128])
decode.5.conv1x1.weight : torch.Size([64, 128, 1, 1])
to_rgb.0.weight : torch.Size([64])
to_rgb.0.bias : torch.Size([64])
to_rgb.2.weight : torch.Size([3, 64, 1, 1])
to_rgb.2.bias : torch.Size([3])

























